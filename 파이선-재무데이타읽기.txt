import pandas as pd
import re
from datetime import datetime
import requests
from bs4 import BeautifulSoup

# 
================================================================================
=============================
def get_dividend_earning_rate(code):
    url = "http://finance.naver.com/item/main.nhn?code=" + code
    html = requests.get(url).text
    soup = BeautifulSoup(html, "html5lib")
    response = soup.select("[id=_dvr]")

    return response[0].text
def get_now_price(code):
    url = "http://finance.naver.com/item/sise.nhn?code=" + code
    html = requests.get(url).text
    soup = BeautifulSoup(html, "html5lib")
    response = soup.select("#_nowVal")
    return response[0].text
# 
================================================================================
================================

code = '005930'
if len(code) == 6:
    try:
        earning_data = get_dividend_earning_rate(code)
        nowprice_data = get_now_price(code)
        print(code, '(배당수익률)', earning_data)
        print(code, '(현재가)', nowprice_data)
    except:
        pass


url_tmpl = 
'http://companyinfo.stock.naver.com/v1/company/ajax/cF1001.aspx?cmp_cd=%s&fin_ty
p=%s&freq_typ=%s'
url_naver = url_tmpl % (code, '4', 'Y')
read_dfs = pd.read_html(url_naver)

read_df = read_dfs[0]

read_df = read_df.set_index("주요재무정보")

cols = list(read_df.columns)

cols_n = []

for x in cols:
    for y in x:
        cols_n.append(y)

cols_new = []
date_str = ''
for xxx in cols_n:
    if xxx.rfind("Unnamed"):
        r = re.search("\d{4}/\d{2}", xxx)
        if r:
            date_str = r.group()
            date_str = date_str.replace("/", "-")
            cols_new.append(date_str)

cols_new.insert(0, '2012-12')

read_df.columns = cols_new

read_df.head()

read_dft = read_df.T

read_dft.rename(columns={"주요재무정보": "date"}, inplace=True)
print(read_dft)